{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/parvez/Documents/CET/react-course/meetup/pages/index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"First Meetup\",\n//     image: \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n//     address: \"First Address yard 1\",\n//     description: \"Some useful description\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"Second Meetup\",\n//     image: \"https://upload.wikimedia.org/wikipedia/commons/9/99/Upper_Kachura_Lake_in_Skardu.jpg\",\n//     address: \"Second Address yard 2\",\n//     description: \"Some useful description two\",\n//   },\n//   {\n//     id: \"m3\",\n//     title: \"Third Meetup\",\n//     image: \"https://upload.wikimedia.org/wikipedia/commons/d/d5/Beauty_-_Uppaer_Kachura_Lake_Sakardu.jpg\",\n//     address: \"Third Address yard 3\",\n//     description: \"Some useful description three\",\n//   },\n// ];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Next Demo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this);\n}; // export async function getServerSideProps(){\n//     // fetch data from API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//         //\n//         revalidate: 1\n//     }\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from API\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL); // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n\n  console.log(\"Im connected maybe\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    // Rerender updated data after each second\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/parvez/Documents/CET/react-course/meetup/pages/index.js"],"names":["Fragment","Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","MOGO_URL","client","connect","console","log","db","meetupCollection","collection","find","toArray","close","map","meetup","title","image","address","description","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAQ,QAAC,QAAD;AAAA,4BACN,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,eAIN,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAMD,CAPD,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,QAAQ,GACZ,yQADF;AAEA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBF,QAApB,CAArB,CAJqC,CAKrC;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMT,OAAO,GAAG,MAAMQ,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLb,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACa,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFkB;AAGhCC,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHgB;AAIhCC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJY;AAKhCC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AAL4B,OAAb,CAAZ;AADJ,KADF;AAUL;AACAC,IAAAA,UAAU,EAAE;AAXP,GAAP;AAaD;AACD,eAAexB,QAAf","sourcesContent":["import { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n// const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"First Meetup\",\n//     image: \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n//     address: \"First Address yard 1\",\n//     description: \"Some useful description\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"Second Meetup\",\n//     image: \"https://upload.wikimedia.org/wikipedia/commons/9/99/Upper_Kachura_Lake_in_Skardu.jpg\",\n//     address: \"Second Address yard 2\",\n//     description: \"Some useful description two\",\n//   },\n//   {\n//     id: \"m3\",\n//     title: \"Third Meetup\",\n//     image: \"https://upload.wikimedia.org/wikipedia/commons/d/d5/Beauty_-_Uppaer_Kachura_Lake_Sakardu.jpg\",\n//     address: \"Third Address yard 3\",\n//     description: \"Some useful description three\",\n//   },\n// ];\nconst HomePage = (props) => {\n  return  <Fragment>\n    <Head>\n      <title>Next Demo App</title>\n    </Head>\n    <MeetupList meetups={props.meetups} />\n  </Fragment>\n};\n// export async function getServerSideProps(){\n//     // fetch data from API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//         //\n//         revalidate: 1\n\n//     }\n\n// }\nexport async function getStaticProps() {\n  // fetch data from API\n  const MOGO_URL =\n    \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL);\n  // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n  console.log(\"Im connected maybe\");\n  const db = client.db();\n\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString(),\n      })),\n    },\n    // Rerender updated data after each second\n    revalidate: 1,\n  };\n}\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}