{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/parvez/Documents/CET/react-course/meetup/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add New Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Just add a new meetup to Demo App of meetups collection which will store in MOngoDB \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n;\nexport async function getStaticPaths() {\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL); // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for selected meetup details\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL); // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      } //   meetupData: {\n      //     title: \"First Meetup\",\n      //     image:\n      //       \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n      //     address: \"First Address yard 1\",\n      //     description: \"Some useful description\",\n      //   },\n\n    } // Rerender updated data after each second\n    // revalidate: 1\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/parvez/Documents/CET/react-course/meetup/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","title","image","address","description","getStaticPaths","MOGO_URL","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","selectedMeetup","findOne","id"],"mappings":"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","sourcesContent":["import {MongoClient, ObjectId} from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nfunction MeetupDetails (props){\n  return (\n    <Fragment>\n    <Head>\n      <title>Add New Meetup</title>\n      <meta name=\"description\" content=\"Just add a new meetup to Demo App of meetups collection which will store in MOngoDB \" />\n    </Head>\n    <MeetupDetail\n    title={props.meetupData.title}\n    image={props.meetupData.image}\n    address={props.meetupData.address}\n    description={props.meetupData.description}\n  />\n  </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n    const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const meetups = await meetupCollection.find({},{_id: 1}).toArray();\n\n    client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup=>({params: {meetupId: meetup._id.toString()}}))\n    \n    // [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for selected meetup details\n  const meetupId = context.params.meetupId;\nconsole.log(meetupId);\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupId)});\n    console.log(selectedMeetup);\n    client.close();\n\n\n  return {\n    props: {\n        meetupData: {\n            id: selectedMeetup._id.toString(),\n            title: selectedMeetup.title,\n            image: selectedMeetup.image,\n            address: selectedMeetup.address,\n            description: selectedMeetup.description,\n\n        },\n    //   meetupData: {\n    //     title: \"First Meetup\",\n    //     image:\n    //       \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n    //     address: \"First Address yard 1\",\n    //     description: \"Some useful description\",\n    //   },\n    },\n    // Rerender updated data after each second\n    // revalidate: 1\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}