{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/parvez/Documents/CET/react-course/meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"First Meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n    address: \"First Address yard 1\",\n    description: \"Some useful description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\n;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/parvez/Documents/CET/react-course/meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,GAAyB;AAEvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,KAAK,EAAC,mGAFR;AAGE,IAAA,OAAO,EAAC,sBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQA,a;AAUR;;AAmED,eAAeA,aAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nfunction MeetupDetails (){\n\n  return (\n    <MeetupDetail\n      title=\"First Meetup\"\n      image=\"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\"\n      address=\"First Address yard 1\"\n      description=\"Some useful description\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n    const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    console.log(\"Im connected maybe\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const meetups = await meetupCollection.find({},{_id: 1}).toArray();\n\n    client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup=>({params: {meetupId: meetup._id.toString()}}))\n    \n    // [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for selected meetup details\n  const meetupId = context.params.meetupId;\n\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const selectedMeetup = await meetupCollection.findOne({_id:meetupId});\n\n    client.close();\n\n\n  return {\n    props: {\n        meetupData: selectedMeetup,\n    //   meetupData: {\n    //     title: \"First Meetup\",\n    //     image:\n    //       \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n    //     address: \"First Address yard 1\",\n    //     description: \"Some useful description\",\n    //   },\n    },\n    // Rerender updated data after each second\n    // revalidate: 1\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}