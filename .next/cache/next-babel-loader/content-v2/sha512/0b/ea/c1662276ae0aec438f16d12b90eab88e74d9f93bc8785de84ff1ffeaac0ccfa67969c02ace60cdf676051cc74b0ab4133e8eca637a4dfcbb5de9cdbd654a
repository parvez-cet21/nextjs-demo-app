{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/parvez/Documents/CET/react-course/meetup/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n  address: \"First Address yard 1\",\n  description: \"Some useful description\"\n}, {\n  id: \"m2\",\n  title: \"Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/9/99/Upper_Kachura_Lake_in_Skardu.jpg\",\n  address: \"Second Address yard 2\",\n  description: \"Some useful description two\"\n}, {\n  id: \"m3\",\n  title: \"Third Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d5/Beauty_-_Uppaer_Kachura_Lake_Sakardu.jpg\",\n  address: \"Third Address yard 3\",\n  description: \"Some useful description three\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}; // export async function getServerSideProps(){\n//     // fetch data from API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//         // \n//         revalidate: 1\n//     }\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from API\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL); // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n\n  console.log(\"Im connected maybe\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    // Rerender updated data after each second \n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/parvez/Documents/CET/react-course/meetup/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","MOGO_URL","client","connect","console","log","db","meetupCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EAAE,mGAHT;AAIEC,EAAAA,OAAO,EAAE,sBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EAAE,sFAHT;AAIEC,EAAAA,OAAO,EAAE,uBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARoB,EAepB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EAAE,8FAHT;AAIEC,EAAAA,OAAO,EAAE,sBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CAfoB,CAAtB;;AAuBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AACA,OAAO,eAAeC,cAAf,GAA+B;AAClC;AACA,QAAMC,QAAQ,GAAG,yQAAjB;AACA,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBF,QAApB,CAArB,CAHkC,CAIlC;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAMC,EAAE,GAAEJ,MAAM,CAACI,EAAP,EAAV;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMT,OAAO,GAAG,MAAMQ,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHb,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACa,GAAR,CAAYC,MAAM,KAAG;AAC1BpB,QAAAA,KAAK,EAAEoB,MAAM,CAACpB,KADY;AAE1BC,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KAFY;AAG1BC,QAAAA,OAAO,EAAEkB,MAAM,CAAClB,OAHU;AAI1BC,QAAAA,WAAW,EAAEiB,MAAM,CAACjB,WAJM;AAK1BJ,QAAAA,EAAE,EAAEqB,MAAM,CAACC,GAAP,CAAWC,QAAX;AALsB,OAAH,CAAlB;AADN,KADJ;AAUH;AACAC,IAAAA,UAAU,EAAE;AAXT,GAAP;AAeH;AACD,eAAenB,QAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"First Meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n    address: \"First Address yard 1\",\n    description: \"Some useful description\",\n  },\n  {\n    id: \"m2\",\n    title: \"Second Meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/9/99/Upper_Kachura_Lake_in_Skardu.jpg\",\n    address: \"Second Address yard 2\",\n    description: \"Some useful description two\",\n  },\n  {\n    id: \"m3\",\n    title: \"Third Meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d5/Beauty_-_Uppaer_Kachura_Lake_Sakardu.jpg\",\n    address: \"Third Address yard 3\",\n    description: \"Some useful description three\",\n  },\n];\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n};\n// export async function getServerSideProps(){\n//     // fetch data from API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//         // \n//         revalidate: 1\n\n//     }\n    \n// }\nexport async function getStaticProps(){\n    // fetch data from API\n    const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    console.log(\"Im connected maybe\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const meetups = await meetupCollection.find().toArray();\n\n    client.close();\n    return {\n        props: {\n            meetups: meetups.map(meetup=>({\n                title: meetup.title,\n                image: meetup.image,\n                address: meetup.address,\n                description: meetup.description,\n                id: meetup._id.toString(),\n            }))\n        },\n        // Rerender updated data after each second \n        revalidate: 1\n\n    }\n    \n}\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}