{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/parvez/Documents/CET/react-course/meetup/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.title,\n    image: props.image,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n;\nexport async function getStaticPaths() {\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL); // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for selected meetup details\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(MOGO_URL); // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollection.findOne({\n    \"_id\": meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup //   meetupData: {\n      //     title: \"First Meetup\",\n      //     image:\n      //       \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n      //     address: \"First Address yard 1\",\n      //     description: \"Some useful description\",\n      //   },\n\n    } // Rerender updated data after each second\n    // revalidate: 1\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/parvez/Documents/CET/react-course/meetup/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","console","log","title","image","address","description","getStaticPaths","MOGO_URL","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,CAAwBC,KAAxB,EAA8B;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACE,sBACE,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACG,KADb;AAEA,IAAA,KAAK,EAAEH,KAAK,CAACI,KAFb;AAGA,IAAA,OAAO,EAAEJ,KAAK,CAACK,OAHf;AAIA,IAAA,WAAW,EAAEL,KAAK,CAACM;AAJnB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAAA;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,QAAQ,GAAG,yQAAjB;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBF,QAApB,CAArB,CAFmC,CAGnC;;AACA,QAAMG,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAAyB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAzB,EAAmCC,OAAnC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACF,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAG;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAH,CAAlB,CAFF,CAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBK,GAAP;AAsBD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACFvB,EAAAA,OAAO,CAACC,GAAR,CAAYsB,QAAZ;AACE,QAAMhB,QAAQ,GAAG,yQAAjB;AACE,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBF,QAApB,CAArB,CAL0C,CAM1C;;AACA,QAAMG,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMe,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAAC,WAAML;AAAP,GAAzB,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AAGF,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACH8B,MAAAA,UAAU,EAAEF,cADT,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AARO,KADF,CAWL;AACA;;AAZK,GAAP;AAcD;AAED,eAAe7B,aAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nfunction MeetupDetails (props){\nconsole.log(props);\n  return (\n    <MeetupDetail\n    title={props.title}\n    image={props.image}\n    address={props.address}\n    description={props.description}\n  />\n  );\n};\n\nexport async function getStaticPaths() {\n    const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const meetups = await meetupCollection.find({},{_id: 1}).toArray();\n\n    client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup=>({params: {meetupId: meetup._id.toString()}}))\n    \n    // [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for selected meetup details\n  const meetupId = context.params.meetupId;\nconsole.log(meetupId);\n  const MOGO_URL = \"mongodb://testingit:testingit@ac-qezzfab-shard-00-00.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-01.ekmy7xj.mongodb.net:27017,ac-qezzfab-shard-00-02.ekmy7xj.mongodb.net:27017/?ssl=true&replicaSet=atlas-jcalt3-shard-0&authSource=admin&retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(MOGO_URL);\n    // const client = await MongoClient.connect(\"mongodb+srv://parvezse15:FLEYnYp1WVxqGpEe@cluster0.ekmy7xj.mongodb.net/meetups?retryWrites=true&w=majority&ssl=true\");\n    const db= client.db();\n\n    const meetupCollection = db.collection(\"meetups\");\n    const selectedMeetup = await meetupCollection.findOne({\"_id\":meetupId});\n    client.close();\n\n\n  return {\n    props: {\n        meetupData: selectedMeetup,\n    //   meetupData: {\n    //     title: \"First Meetup\",\n    //     image:\n    //       \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Upper_kachura_lake%2C_skardu%2C_baltistan.jpg\",\n    //     address: \"First Address yard 1\",\n    //     description: \"Some useful description\",\n    //   },\n    },\n    // Rerender updated data after each second\n    // revalidate: 1\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}